name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: '1.14'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: golangci/golangci-lint-action@v2
      with:
        version: v1.39.0
      env:
        GOROOT: ""

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - run: make test

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          image: 'kindest/node:v1.19.11'
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-goleak-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-goleak-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-goleak-
      - name: Run integration tests
        env:
          GOPATH: /tmp/go
        run: |
          go install github.com/helm/helm@v3.6.3 && helm version
          ./scripts/localkube-integration.sh

  rpaas-api-docker-image:
    name: "Publish rpaas-api image on dockerhub"
    needs:
    - test
    - lint
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: Surgo/docker-smart-tag-action@v1
      id: smarttag
      with:
        docker_image: tsuru/rpaas-api
        default_branch: master
        tag_with_sha: "true"
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.api
        push: true
        tags: ${{ steps.smarttag.outputs.tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  rpaas-operator-docker-image:
    name: "Publish rpaas-operator image on dockerhub"
    needs:
    - test
    - lint
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: Surgo/docker-smart-tag-action@v1
      id: smarttag
      with:
        docker_image: tsuru/rpaas-operator
        default_branch: master
        tag_with_sha: "true"
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.operator
        push: true
        tags: ${{ steps.smarttag.outputs.tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  rpaas-purger-docker-image:
    name: "Publish rpaas-purger image on dockerhub"
    needs:
    - test
    - lint
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: Surgo/docker-smart-tag-action@v1
      id: smarttag
      with:
        docker_image: tsuru/rpaas-purger
        default_branch: master
        tag_with_sha: "true"
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.purger
        push: true
        tags: ${{ steps.smarttag.outputs.tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  release:
    name: "Release artifacts on github"
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
