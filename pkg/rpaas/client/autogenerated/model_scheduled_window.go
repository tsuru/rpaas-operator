/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the ScheduledWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledWindow{}

// ScheduledWindow struct for ScheduledWindow
type ScheduledWindow struct {
	// Min number of running pods while this window is active.
	MinReplicas int32 `json:"minReplicas"`
	// An Cron expression defining the start of the scheduled window.
	Start string `json:"start"`
	// An Cron expression defining the end of the scheduled window.
	End string `json:"end"`
}

// NewScheduledWindow instantiates a new ScheduledWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledWindow(minReplicas int32, start string, end string) *ScheduledWindow {
	this := ScheduledWindow{}
	this.MinReplicas = minReplicas
	this.Start = start
	this.End = end
	return &this
}

// NewScheduledWindowWithDefaults instantiates a new ScheduledWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledWindowWithDefaults() *ScheduledWindow {
	this := ScheduledWindow{}
	return &this
}

// GetMinReplicas returns the MinReplicas field value
func (o *ScheduledWindow) GetMinReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinReplicas
}

// GetMinReplicasOk returns a tuple with the MinReplicas field value
// and a boolean to check if the value has been set.
func (o *ScheduledWindow) GetMinReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinReplicas, true
}

// SetMinReplicas sets field value
func (o *ScheduledWindow) SetMinReplicas(v int32) {
	o.MinReplicas = v
}

// GetStart returns the Start field value
func (o *ScheduledWindow) GetStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *ScheduledWindow) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *ScheduledWindow) SetStart(v string) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *ScheduledWindow) GetEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *ScheduledWindow) GetEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *ScheduledWindow) SetEnd(v string) {
	o.End = v
}

func (o ScheduledWindow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["minReplicas"] = o.MinReplicas
	toSerialize["start"] = o.Start
	toSerialize["end"] = o.End
	return toSerialize, nil
}

type NullableScheduledWindow struct {
	value *ScheduledWindow
	isSet bool
}

func (v NullableScheduledWindow) Get() *ScheduledWindow {
	return v.value
}

func (v *NullableScheduledWindow) Set(val *ScheduledWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledWindow(val *ScheduledWindow) *NullableScheduledWindow {
	return &NullableScheduledWindow{value: val, isSet: true}
}

func (v NullableScheduledWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
